{"version":3,"file":"src_app_features_cart_pages_resume_resume_module_ts.9de18f2040e08ae3.js","mappings":"0TAIMA,gBAA0BA,yDAASA,4BAAmB,GACpDA,6BACFA,iDAGAA,2BAKEA,gFAAmBA,oCAAiC,EAApDA,CAAqD,+DACjCA,yBAAgB,GACrCA,oCALCA,4BAAkB,YAAlBA,CAAkB,iDAHtBA,SACEA,iCAQFA,8BAPwBA,gGA+C1BA,kBAAwB,UACfA,yDAA4CA,QACnDA,aAAGA,qCAAyBA,gBAAwBA,gBAAIA,mBAAzBA,yCClD7B,MAAOC,EAOXC,YAAoBC,EAAkCC,GAAlCC,mBAAkCA,cANtDA,kBAA+B,GAC/BA,wBAA6B,EAC7BA,cAAmB,EACnBA,WAAgB,EAChBA,cAAmB,CAEoD,CAEvEC,WACED,KAAKE,kBACL,MAAMC,EAAcH,KAAKD,OAAOI,IAC1BC,EAAcD,EAAIE,UAAUF,EAAIG,QAAQ,IAAK,GAAK,EAAGH,EAAII,QAC/DP,KAAKF,YAAYU,eAAeJ,EAClC,CAEQF,kBACNF,KAAKS,aAAeT,KAAKF,YAAYI,kBACrCF,KAAKU,mBACP,CAEAC,cACE,OAAoC,IAA7BX,KAAKS,aAAaF,MAC3B,CAEAK,oBACEZ,KAAKF,YAAYe,UAAU,QAC7B,CAEAC,iBACEd,KAAKU,mBACP,CAEAK,sBAAsBC,GACpBhB,KAAKU,mBACP,CAEAO,YAAYC,GACVlB,KAAKkB,mBAAqBA,EAC1BlB,KAAKmB,SAAWnB,KAAKoB,OAASF,EAAqB,IACrD,CAEAG,0BACE,YAAKD,MAAQpB,KAAKsB,SAAWtB,KAAKmB,SAC3BnB,KAAKoB,KACd,CAEAV,oBACE,MAAMa,EACJvB,KAAKS,aAAae,IAAKC,KACZC,MAAOD,EAAQC,MAAOC,SAAUF,EAAQE,YAGrD3B,KAAKsB,SAAWC,EAAWK,OAAO,CAACC,EAAIC,IAC9BD,EAAKC,EAAGJ,MAAQI,EAAGH,SACzB,EACL,CAEAI,eACE/B,KAAKF,YAAYkC,eAAe,CAC9BZ,MAAOpB,KAAKoB,MACZE,SAAUtB,KAAKsB,SACfH,SAAUnB,KAAKmB,SACfD,mBAAoBlB,KAAKkB,qBAE3BlB,KAAKD,OAAOkC,SAAS,CAAC,kBACxB,EAlEWrC,EAAe,oCAAfA,GAAesC,0BAAftC,EAAe,sBAAfA,EAAeuC,umBDT5BxC,iBAA8B,UAA9BA,CAA8B,UAA9BA,CAA8B,QAGpBA,yBAAaA,QACjBA,qBAGFA,QACAA,gCAUFA,QACAA,iBAA2B,UAA3BA,CAA2B,sBAGrBA,gDAAwByC,gBAAmB,GAC5CzC,UAGHA,kBAAgC,WAE5BA,wBAAUA,mBAAQA,+BAA4CA,UAEhEA,iBACEA,wBACAA,mBAASA,+BAA6CA,QACtDA,kBACEA,UACFA,UAEFA,kBAA6B,WACrBA,kBAAKA,QACXA,oBACEA,+BACFA,YAIJA,sBAIEA,gCAASyC,gBAAc,GAEvBzC,uBACFA,YAIJA,oEApDUA,wCAISA,wCAAsB,cAoBfA,sDAITA,+DAEPA,gFAMAA,gFAQJA,4qDE5CN,MAAM0C,EAAiB,CAAC,CAAEC,KAAM,GAAIC,UAAW3C,IAMzC,MAAO4C,KAAmB,oCAAnBA,EAAmB,EAAnBA,EAAmB,sBAAnBA,MAAmB,0BAHpBC,cAAsBJ,GACtBI,gCCGN,MAAOC,KAAY,oCAAZA,EAAY,EAAZA,EAAY,sBAAZA,MAAY,0BAFbC,IAAcH,EAAqBI","names":["i0","ResumeComponent","constructor","cartService","router","this","ngOnInit","getCartProducts","url","currentStep","substring","indexOf","length","changeStepData","cartProducts","calculateSubTotal","cartIsEmpty","emptyShoppingCart","emptyCart","changeQuantity","removeProductFromCart","productId","getDiscount","discountPercentage","discount","total","calculateEstimatedTotal","subTotal","priceArray","map","product","price","quantity","reduce","pv","cv","goToCheckout","setPaymentData","navigate","core","selectors","ctx","routes","path","component","ResumeRoutingModule","RouterModule","ResumeModule","SharedModule","CartModule"],"sourceRoot":"webpack:///","sources":["./src/app/features/cart/pages/resume/resume.component.html","./src/app/features/cart/pages/resume/resume.component.ts","./src/app/features/cart/pages/resume/resume-routing.module.ts","./src/app/features/cart/pages/resume/resume.module.ts"],"sourcesContent":["<div class=\"resume-container\">\r\n  <div class=\"products-container\">\r\n    <div class=\"title\">\r\n      <h2>Cart Products</h2>\r\n      <a *ngIf=\"!cartIsEmpty()\" (click)=\"emptyShoppingCart()\">\r\n        Empty your cart\r\n      </a>\r\n    </div>\r\n    <ng-container *ngIf=\"!cartIsEmpty(); else emptyCart\">\r\n      <product-tile\r\n        *ngFor=\"let product of cartProducts; let i = index\"\r\n        [position]=\"i + 1\"\r\n        [product]=\"product\"\r\n        [quantity]=\"product.quantity\"\r\n        (onRemoveProduct)=\"removeProductFromCart(product.id)\"\r\n        (onChangeQuantity)=\"changeQuantity()\"\r\n      ></product-tile>\r\n    </ng-container>\r\n  </div>\r\n  <div class=\"goto-checkout\">\r\n    <div class=\"coupon-container\">\r\n      <discount-field\r\n        (onDiscountPercentage)=\"getDiscount($event)\"\r\n      ></discount-field>\r\n    </div>\r\n\r\n    <div class=\"order-informations\">\r\n      <span>\r\n        Subtotal: <strong>{{ subTotal | currency : \"USD\" : \"symbol\" }}</strong>\r\n      </span>\r\n      <span>\r\n        Discount:\r\n        <strong> {{ discount | currency : \"USD\" : \"symbol\" }} </strong>\r\n        <small>\r\n          {{ discountPercentage > 0 ? \"(\" + discountPercentage + \"%)\" : \"\" }}\r\n        </small>\r\n      </span>\r\n      <div class=\"estimated-total\">\r\n        <span>Total</span>\r\n        <span id=\"value\">\r\n          {{ calculateEstimatedTotal() | currency : \"USD\" : \"symbol\" }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      [disabled]=\"cartIsEmpty()\"\r\n      (click)=\"goToCheckout()\"\r\n    >\r\n      CHECKOUT\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #emptyCart>\r\n  <div class=\"empty-cart\">\r\n    <span> There are no products in your shopping cart </span>\r\n    <p>Add products by clicking <a [routerLink]=\"['/']\">HERE</a></p>\r\n  </div>\r\n</ng-template>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CartService } from 'src/app/core/services';\r\nimport { ICartProduct } from 'src/app/shared/models';\r\n\r\n@Component({\r\n  templateUrl: './resume.component.html',\r\n  styleUrls: ['./resume.component.scss'],\r\n})\r\nexport class ResumeComponent {\r\n  cartProducts: ICartProduct[] = [];\r\n  discountPercentage: number = 0;\r\n  discount: number = 0;\r\n  total: number = 0;\r\n  subTotal: number = 0;\r\n\r\n  constructor(private cartService: CartService, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.getCartProducts();\r\n    const url: string = this.router.url;\r\n    const currentStep = url.substring(url.indexOf('/', 2) + 1, url.length);\r\n    this.cartService.changeStepData(currentStep);\r\n  }\r\n\r\n  private getCartProducts() {\r\n    this.cartProducts = this.cartService.getCartProducts();\r\n    this.calculateSubTotal();\r\n  }\r\n\r\n  cartIsEmpty(): boolean {\r\n    return this.cartProducts.length === 0;\r\n  }\r\n\r\n  emptyShoppingCart() {\r\n    this.cartService.emptyCart('clear');\r\n  }\r\n\r\n  changeQuantity() {\r\n    this.calculateSubTotal();\r\n  }\r\n\r\n  removeProductFromCart(productId: number) {\r\n    this.calculateSubTotal();\r\n  }\r\n\r\n  getDiscount(discountPercentage: number) {\r\n    this.discountPercentage = discountPercentage;\r\n    this.discount = this.total * (discountPercentage / 100);\r\n  }\r\n\r\n  calculateEstimatedTotal(): number {\r\n    this.total = this.subTotal - this.discount;\r\n    return this.total;\r\n  }\r\n\r\n  calculateSubTotal() {\r\n    const priceArray: { price: number; quantity: number }[] =\r\n      this.cartProducts.map((product) => {\r\n        return { price: product.price, quantity: product.quantity };\r\n      });\r\n\r\n    this.subTotal = priceArray.reduce((pv, cv) => {\r\n      return pv + cv.price * cv.quantity;\r\n    }, 0);\r\n  }\r\n\r\n  goToCheckout() {\r\n    this.cartService.setPaymentData({\r\n      total: this.total,\r\n      subTotal: this.subTotal,\r\n      discount: this.discount,\r\n      discountPercentage: this.discountPercentage,\r\n    });\r\n    this.router.navigate(['/cart/checkout']);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ResumeComponent } from './resume.component';\r\n\r\nconst routes: Routes = [{ path: '', component: ResumeComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ResumeRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { ResumeRoutingModule } from './resume-routing.module';\r\nimport { ResumeComponent } from './resume.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { CartModule } from '../../cart.module';\r\n\r\n@NgModule({\r\n  declarations: [ResumeComponent],\r\n  imports: [SharedModule, ResumeRoutingModule, CartModule],\r\n})\r\nexport class ResumeModule {}\r\n"],"x_google_ignoreList":[]}