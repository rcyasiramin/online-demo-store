{"version":3,"file":"common.55de70fa1f89d656.js","mappings":"2KAaM,MAAOA,EACXC,YACUC,EACAC,EACAC,GAFAC,mBACAA,cACAA,YACP,CAEKC,WAAWC,GACjB,SAAIF,KAAKH,YAAYM,eAAgBH,KAAKH,YAAYO,kBAItDJ,KAAKD,MAAMM,oBACT,yBACA,6CAEFL,KAAKF,OAAOQ,SAAS,CAAC,UAAW,CAAEC,YAAa,CAAEC,KAAMN,KACjD,GACT,CAEAO,YACEC,EACAC,GAEA,OAAKA,EAAMC,IAAIC,SAAS,SAIjBb,KAAKC,WAAWU,EAAMC,MAAQZ,KAAKH,YAAYiB,UAH7Cd,KAAKC,WAAWU,EAAMC,IAIjC,EA7BWjB,EAAS,oCAATA,GAASoB,sCAATpB,EAAS,wBAATA,EAASqB,QAATrB,EAAS,qBAFR,kECLR,MAAOsB,EACXrB,YAAoBsB,iBAA6B,CAEjDC,OACEnB,KAAKkB,QAAQC,KAAK,iBACpB,CAEAC,OACEpB,KAAKkB,QAAQE,KAAK,iBACpB,EATWH,EAAqB,oCAArBA,GAAqBI,cAArBJ,EAAqB,wBAArBA,EAAqBD,QAArBC,EAAqB,qBAFpB","names":["AuthGuard","constructor","authService","router","alert","this","checkLogin","fromUrl","isLoggedIn","hasLoggedUser","createWarningDialog","navigate","queryParams","from","canActivate","route","state","url","includes","isAdmin","_angular_core__WEBPACK_IMPORTED_MODULE_1__","factory","LoadingSpinnerService","spinner","show","hide","_angular_core__WEBPACK_IMPORTED_MODULE_0__"],"sourceRoot":"webpack:///","sources":["./src/app/core/guards/auth/auth.guard.ts","./src/app/core/services/spinner/loading-spinner.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { AlertService, AuthService } from '../../services';\r\nimport { RouteGuard } from '../../types';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private alert: AlertService\r\n  ) {}\r\n\r\n  private checkLogin(fromUrl: string): boolean {\r\n    if (this.authService.isLoggedIn() || this.authService.hasLoggedUser()) {\r\n      return true;\r\n    }\r\n\r\n    this.alert.createWarningDialog(\r\n      'You are not logged in!',\r\n      'You need to be logged to access this page'\r\n    );\r\n    this.router.navigate(['/login'], { queryParams: { from: fromUrl } });\r\n    return false;\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): RouteGuard {\r\n    if (!state.url.includes('admin')) {\r\n      return this.checkLogin(state.url);\r\n    }\r\n\r\n    return this.checkLogin(state.url) && this.authService.isAdmin();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoadingSpinnerService {\r\n  constructor(private spinner: NgxSpinnerService) {}\r\n\r\n  show() {\r\n    this.spinner.show('loadingSpinner');\r\n  }\r\n\r\n  hide() {\r\n    this.spinner.hide('loadingSpinner');\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}